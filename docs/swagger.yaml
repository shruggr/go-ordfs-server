openapi: 3.0.3
info:
  title: OrdFS Server API
  description: |
    API server for serving Bitcoin ordinal inscriptions and OrdFS content.

    Supports:
    - Content retrieval by txid or outpoint
    - Version tracking for ordinal reinscriptions
    - OrdFS directory navigation
    - DNS-based custom domain routing
    - Block and transaction queries
  version: 1.0.0
  contact:
    name: OrdFS Server
servers:
  - url: /
    description: Current server

paths:
  /health:
    get:
      summary: Health check
      description: Returns the server health status
      operationId: healthCheck
      tags:
        - Health
      responses:
        '200':
          description: Server is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok

  /block/latest:
    get:
      summary: Get latest block
      description: Returns the latest block state from the longest chain
      operationId: getLatestBlock
      tags:
        - Block
      responses:
        '200':
          description: Latest block state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockState'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /block/height/{height}:
    get:
      summary: Get block by height
      description: Returns block header for a specific height
      operationId: getBlockByHeight
      tags:
        - Block
      parameters:
        - name: height
          in: path
          required: true
          description: Block height
          schema:
            type: integer
      responses:
        '200':
          description: Block header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockHeader'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /block/hash/{hash}:
    get:
      summary: Get block by hash
      description: Returns block state for a specific hash
      operationId: getBlockByHash
      tags:
        - Block
      parameters:
        - name: hash
          in: path
          required: true
          description: Block hash (64 hex characters)
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{64}$'
      responses:
        '200':
          description: Block state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockState'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /tx/{txid}:
    get:
      summary: Get raw transaction
      description: Returns raw transaction bytes
      operationId: getRawTransaction
      tags:
        - Transaction
      parameters:
        - name: txid
          in: path
          required: true
          description: Transaction ID (64 hex characters)
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{64}$'
      responses:
        '200':
          description: Raw transaction bytes
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /content/{txidOrOutpoint}:
    get:
      summary: Get inscription content
      description: |
        Returns inscription or B protocol content.

        Supports:
        - Transaction ID (64 hex chars) - returns first inscription found
        - Outpoint format (txid_vout) - returns content at specific output
        - Sequence parameter for ordinal tracking
        - MAP protocol metadata extraction
      operationId: getContent
      tags:
        - Content
      parameters:
        - name: txidOrOutpoint
          in: path
          required: true
          description: Transaction ID or outpoint (txid_vout format)
          schema:
            type: string
        - name: seq
          in: query
          required: false
          description: |
            Ordinal sequence to retrieve (only applies to outpoints):
            - 0 = first inscription (default)
            - N = Nth reinscription
            - -1 = latest sequence (last unspent location)
          schema:
            type: integer
            default: 0
        - name: map
          in: query
          required: false
          description: |
            Include merged MAP protocol metadata in X-Map header.
            MAP data is merged across all spends up to the requested version
            using last-write-wins semantics.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Content with appropriate content type
          headers:
            Content-Type:
              schema:
                type: string
              description: MIME type of the content
            X-Outpoint:
              schema:
                type: string
              description: Resolved outpoint for the content
            X-Map:
              schema:
                type: string
              description: |
                JSON-encoded MAP protocol metadata (only present if map=true).
                Contains merged key-value pairs from all MAP SET commands
                encountered in the spend chain.
            Cache-Control:
              schema:
                type: string
              description: |
                Caching directive:
                - seq=-1: "public, max-age=60" (latest sequence, short cache)
                - seq>=0: "public, max-age=86400, immutable" (specific sequence, long cache)
          content:
            '*/*':
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /content/{pointer}/{filename}:
    get:
      summary: Get file from OrdFS directory
      description: |
        Loads an OrdFS directory and returns a specific file.
        Directory must be a JSON inscription mapping filenames to ord:// pointers.
      operationId: getDirectoryFile
      tags:
        - Content
      parameters:
        - name: pointer
          in: path
          required: true
          description: Directory pointer (txid or outpoint)
          schema:
            type: string
        - name: filename
          in: path
          required: true
          description: Filename to retrieve from directory
          schema:
            type: string
      responses:
        '200':
          description: File content with appropriate content type
          headers:
            Content-Type:
              schema:
                type: string
              description: MIME type of the file
            X-Outpoint:
              schema:
                type: string
              description: Resolved outpoint for the file
          content:
            '*/*':
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /:
    get:
      summary: Root endpoint with DNS routing
      description: |
        Returns content based on DNS TXT record for custom domains.
        If no DNS configuration found, returns "OrdFS Server".

        DNS TXT record format: _ordfs.yourdomain.com â†’ ordfs=<outpoint>[:seq]
      operationId: getRoot
      tags:
        - DNS
      responses:
        '200':
          description: Content or server status
          content:
            '*/*':
              schema:
                type: string
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /{fileOrPointer}:
    get:
      summary: Smart route for inscription or DNS file
      description: |
        Attempts to:
        1. Load as inscription/outpoint
        2. If not found and DNS enabled, load from DNS directory

        Supports ord-fs/json redirect to index.html
      operationId: getFileOrPointer
      tags:
        - DNS
      parameters:
        - name: fileOrPointer
          in: path
          required: true
          description: File name or inscription pointer
          schema:
            type: string
        - name: raw
          in: query
          required: false
          description: If set, prevents redirect for ord-fs/json content
          schema:
            type: string
      responses:
        '200':
          description: Content with appropriate content type
          content:
            '*/*':
              schema:
                type: string
                format: binary
        '302':
          description: Redirect to index.html for ord-fs/json
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /{pointer}/{filename}:
    get:
      summary: Get file from directory (alias)
      description: Alternative route for directory file access
      operationId: getFile
      tags:
        - Content
      parameters:
        - name: pointer
          in: path
          required: true
          description: Directory pointer
          schema:
            type: string
        - name: filename
          in: path
          required: true
          description: Filename to retrieve
          schema:
            type: string
      responses:
        '200':
          description: File content
          content:
            '*/*':
              schema:
                type: string
                format: binary
        '404':
          $ref: '#/components/responses/NotFound'

components:
  schemas:
    BlockHeader:
      type: object
      description: Bitcoin block header information
      properties:
        height:
          type: integer
          description: Block height in the chain
          example: 800000
        hash:
          type: string
          description: Block hash (64 hex characters)
          example: 000000000000000000d5c78530c2e25e8b8b8e2e2a8f8e8e2e2a8f8e8e2e2a8f
        version:
          type: integer
          description: Block version number
          example: 536870912
        merkleRoot:
          type: string
          description: Merkle root hash of all transactions
          example: 4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b
        creationTimestamp:
          type: integer
          description: Block creation timestamp (Unix epoch)
          example: 1234567890
        difficultyTarget:
          type: integer
          description: Difficulty target (bits field)
          example: 486604799
        nonce:
          type: integer
          description: Nonce used in proof-of-work
          example: 1234567890
        prevBlockHash:
          type: string
          description: Hash of the previous block
          example: 000000000000000000a5c78530c2e25e8b8b8e2e2a8f8e8e2e2a8f8e8e2e2a8f

    BlockState:
      type: object
      description: Block state information including header and chain status
      properties:
        header:
          $ref: '#/components/schemas/BlockHeader'
        state:
          type: string
          description: Block chain state
          enum:
            - LONGEST_CHAIN
            - STALE
            - ORPHAN
            - REJECTED
          example: LONGEST_CHAIN
        height:
          type: integer
          description: Block height
          example: 800000

    Error:
      type: object
      properties:
        error:
          type: string
          example: Error message

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

tags:
  - name: Health
    description: Health check endpoints
  - name: Block
    description: Block information queries
  - name: Transaction
    description: Transaction data retrieval
  - name: Content
    description: Inscription and content retrieval
  - name: DNS
    description: DNS-based routing and custom domains
